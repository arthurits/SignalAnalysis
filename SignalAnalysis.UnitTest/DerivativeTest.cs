namespace SignalAnalysis.UnitTest;

[TestClass]
public class DerivativeTest
{
    private readonly double[] sin1Hz = [0, 0.06279052, 0.125333234, 0.187381315, 0.248689887, 0.309016994, 0.368124553, 0.425779292, 0.481753674, 0.535826795, 0.587785252, 0.63742399,
        0.684547106, 0.728968627, 0.770513243, 0.809016994, 0.844327926, 0.87630668, 0.904827052, 0.929776486, 0.951056516, 0.968583161, 0.982287251, 0.992114701, 0.998026728,
        1, 0.998026728, 0.992114701, 0.982287251, 0.968583161, 0.951056516, 0.929776486, 0.904827052, 0.87630668, 0.844327926, 0.809016994, 0.770513243, 0.728968627, 0.684547106,
        0.63742399, 0.587785252, 0.535826795, 0.481753674, 0.425779292, 0.368124553, 0.309016994, 0.248689887, 0.187381315, 0.125333234, 0.06279052, 0, -0.06279052, -0.125333234,
        -0.187381315, -0.248689887, -0.309016994, -0.368124553, -0.425779292, -0.481753674, -0.535826795, -0.587785252, -0.63742399, -0.684547106, -0.728968627, -0.770513243,
        -0.809016994, -0.844327926, -0.87630668, -0.904827052, -0.929776486, -0.951056516, -0.968583161, -0.982287251, -0.992114701, -0.998026728, -1, -0.998026728, -0.992114701,
        -0.982287251, -0.968583161, -0.951056516, -0.929776486, -0.904827052, -0.87630668, -0.844327926, -0.809016994, -0.770513243, -0.728968627, -0.684547106, -0.63742399,
        -0.587785252, -0.535826795, -0.481753674, -0.425779292, -0.368124553, -0.309016994, -0.248689887, -0.187381315, -0.125333234, -0.06279052, 0];

    private readonly double[] Dsin1Hz = [6.283185307, 6.270786876, 6.233640514, 6.171892821, 6.085787487, 5.975664329, 5.841957955, 5.685196042, 5.505997257, 5.305068816,
        5.083203692, 4.841277486, 4.580244969, 4.301136318, 4.005053047, 3.693163661, 3.366699045, 3.026947607, 2.675250189, 2.312994781, 1.941611039, 1.562564645, 1.177351523,
        0.787491932, 0.39452447, 0, -0.39452447, -0.787491932, -1.177351523, -1.562564645, -1.941611039, -2.312994781, -2.675250189, -3.026947607, -3.366699045, -3.693163661,
        -4.005053047, -4.301136318, -4.580244969, -4.841277486, -5.083203692, -5.305068816, -5.505997257, -5.685196042, -5.841957955, -5.975664329, -6.085787487, -6.171892821,
        -6.233640514, -6.270786876, -6.283185307, -6.270786876, -6.233640514, -6.171892821, -6.085787487, -5.975664329, -5.841957955, -5.685196042, -5.505997257, -5.305068816,
        -5.083203692, -4.841277486, -4.580244969, -4.301136318, -4.005053047, -3.693163661, -3.366699045, -3.026947607, -2.675250189, -2.312994781, -1.941611039, -1.562564645,
        -1.177351523, -0.787491932, -0.39452447, 0, 0.39452447, 0.787491932, 1.177351523, 1.562564645, 1.941611039, 2.312994781, 2.675250189, 3.026947607, 3.366699045,
        3.693163661, 4.005053047, 4.301136318, 4.580244969, 4.841277486, 5.083203692, 5.305068816, 5.505997257, 5.685196042, 5.841957955, 5.975664329, 6.085787487, 6.171892821,
        6.233640514, 6.270786876, 6.283185307];

    private readonly double[] sin2Hz = [0, 0.062666617, 0.124344944, 0.184062276, 0.240876837, 0.293892626, 0.342273553, 0.385256621, 0.422163963, 0.452413526, 0.475528258,
        0.491143625, 0.499013364, 0.499013364, 0.491143625, 0.475528258, 0.452413526, 0.422163963, 0.385256621, 0.342273553, 0.293892626, 0.240876837, 0.184062276, 0.124344944,
        0.062666617, 0, -0.062666617, -0.124344944, -0.184062276, -0.240876837, -0.293892626, -0.342273553, -0.385256621, -0.422163963, -0.452413526, -0.475528258, -0.491143625,
        -0.499013364, -0.499013364, -0.491143625, -0.475528258, -0.452413526, -0.422163963, -0.385256621, -0.342273553, -0.293892626, -0.240876837, -0.184062276, -0.124344944,
        -0.062666617, 0, 0.062666617, 0.124344944, 0.184062276, 0.240876837, 0.293892626, 0.342273553, 0.385256621, 0.422163963, 0.452413526, 0.475528258, 0.491143625,
        0.499013364, 0.499013364, 0.491143625, 0.475528258, 0.452413526, 0.422163963, 0.385256621, 0.342273553, 0.293892626, 0.240876837, 0.184062276, 0.124344944, 0.062666617,
        0, -0.062666617, -0.124344944, -0.184062276, -0.240876837, -0.293892626, -0.342273553, -0.385256621, -0.422163963, -0.452413526, -0.475528258, -0.491143625,
        -0.499013364, -0.499013364, -0.491143625, -0.475528258, -0.452413526, -0.422163963, -0.385256621, -0.342273553, -0.293892626, -0.240876837, -0.184062276, -0.124344944,
        -0.062666617, 0];

    private readonly double[] Dsin2Hz = [6.283185307, 6.233640514, 6.085787487, 5.841957955, 5.505997257, 5.083203692, 4.580244969, 4.005053047, 3.366699045, 2.675250189,
        1.941611039, 1.177351523, 0.39452447, -0.39452447, -1.177351523, -1.941611039, -2.675250189, -3.366699045, -4.005053047, -4.580244969, -5.083203692, -5.505997257,
        -5.841957955, -6.085787487, -6.233640514, -6.283185307, -6.233640514, -6.085787487, -5.841957955, -5.505997257, -5.083203692, -4.580244969, -4.005053047, -3.366699045,
        -2.675250189, -1.941611039, -1.177351523, -0.39452447, 0.39452447, 1.177351523, 1.941611039, 2.675250189, 3.366699045, 4.005053047, 4.580244969, 5.083203692,
        5.505997257, 5.841957955, 6.085787487, 6.233640514, 6.283185307, 6.233640514, 6.085787487, 5.841957955, 5.505997257, 5.083203692, 4.580244969, 4.005053047, 3.366699045,
        2.675250189, 1.941611039, 1.177351523, 0.39452447, -0.39452447, -1.177351523, -1.941611039, -2.675250189, -3.366699045, -4.005053047, -4.580244969, -5.083203692,
        -5.505997257, -5.841957955, -6.085787487, -6.233640514, -6.283185307, -6.233640514, -6.085787487, -5.841957955, -5.505997257, -5.083203692, -4.580244969, -4.005053047,
        -3.366699045, -2.675250189, -1.941611039, -1.177351523, -0.39452447, 0.39452447, 1.177351523, 1.941611039, 2.675250189, 3.366699045, 4.005053047, 4.580244969,
        5.083203692, 5.505997257, 5.841957955, 6.085787487, 6.233640514, 6.283185307];

    private readonly double[] sinSum = [0, 0.125457136, 0.249678177, 0.371443591, 0.489566724, 0.602909621, 0.710398106, 0.811035913, 0.903917637, 0.988240321, 1.06331351,
        1.128567615, 1.18356047, 1.227981992, 1.261656868, 1.284545253, 1.296741452, 1.298470643, 1.290083674, 1.272050039, 1.244949142, 1.209459998, 1.166349527, 1.116459645,
        1.060693345, 1, 0.935360112, 0.867769758, 0.798224974, 0.727706324, 0.65716389, 0.587502933, 0.519570431, 0.454142717, 0.391914399, 0.333488736, 0.279369617, 0.229955263,
        0.185533742, 0.146280364, 0.112256994, 0.083413269, 0.059589711, 0.04052267, 0.025851, 0.015124368, 0.00781305, 0.003319038, 0.00098829, 0.000123903, 0, -0.000123903,
        -0.00098829, -0.003319038, -0.00781305, -0.015124368, -0.025851, -0.04052267, -0.059589711, -0.083413269, -0.112256994, -0.146280364, -0.185533742, -0.229955263, -0.279369617,
        -0.333488736, -0.391914399, -0.454142717, -0.519570431, -0.587502933, -0.65716389, -0.727706324, -0.798224974, -0.867769758, -0.935360112, -1, -1.060693345, -1.116459645,
        -1.166349527, -1.209459998, -1.244949142, -1.272050039, -1.290083674, -1.298470643, -1.296741452, -1.284545253, -1.261656868, -1.227981992, -1.18356047, -1.128567615,
        -1.06331351, -0.988240321, -0.903917637, -0.811035913, -0.710398106, -0.602909621, -0.489566724, -0.371443591, -0.249678177, -0.125457136, 0];

    private readonly double[] DsinSum = [12.56637061, 12.50442739, 12.319428, 12.01385078, 11.59178474, 11.05886802, 10.42220292, 9.690249088, 8.872696302, 7.980319005,
        7.024814731, 6.018629009, 4.974769439, 3.906611848, 2.827701524, 1.751552622, 0.691448857, -0.339751439, -1.329802858, -2.267250189, -3.141592654, -3.943432612,
        -4.664606432, -5.298295555, -5.839116045, -6.283185307, -6.628164984, -6.873279418, -7.019309478, -7.068561902, -7.024814731, -6.89323975, -6.680303236, -6.393646652,
        -6.041949234, -5.6347747, -5.182404569, -4.695660788, -4.185720499, -3.663925963, -3.141592654, -2.629818627, -2.139298211, -1.680142995, -1.261712986, -0.892460637,
        -0.57979023, -0.329934866, -0.147853028, -0.037146362, 0, -0.037146362, -0.147853028, -0.329934866, -0.57979023, -0.892460637, -1.261712986, -1.680142995, -2.139298211,
        -2.629818627, -3.141592654, -3.663925963, -4.185720499, -4.695660788, -5.182404569, -5.6347747, -6.041949234, -6.393646652, -6.680303236, -6.89323975, -7.024814731,
        -7.068561902, -7.019309478, -6.873279418, -6.628164984, -6.283185307, -5.839116045, -5.298295555, -4.664606432, -3.943432612, -3.141592654, -2.267250189, -1.329802858,
        -0.339751439, 0.691448857, 1.751552622, 2.827701524, 3.906611848, 4.974769439, 6.018629009, 7.024814731, 7.980319005, 8.872696302, 9.690249088, 10.42220292, 11.05886802,
        11.59178474, 12.01385078, 12.319428, 12.50442739, 12.56637061];

    [TestMethod]
    public void Test_Derivative_BackwardOnePoint()
    {
        var test = Derivative.Derivate(sin1Hz, DerivativeMethod.BackwardOnePoint, 0, sin1Hz.GetUpperBound(0), 100);
        test= Derivative.Derivate(sin2Hz, DerivativeMethod.BackwardOnePoint, 0, sin1Hz.GetUpperBound(0), 100);
        test = Derivative.Derivate(sinSum, DerivativeMethod.BackwardOnePoint, 0, sin1Hz.GetUpperBound(0), 100);

        Assert.AreEqual(Dsin1Hz, Derivative.Derivate(sin1Hz, DerivativeMethod.BackwardOnePoint, 0, sin1Hz.GetUpperBound(0), 100));
        Assert.AreEqual(Dsin2Hz, Derivative.Derivate(sin2Hz, DerivativeMethod.BackwardOnePoint, 0, sin2Hz.GetUpperBound(0), 100));
        Assert.AreEqual(DsinSum, Derivative.Derivate(sinSum, DerivativeMethod.BackwardOnePoint, 0, sinSum.GetUpperBound(0), 100));

        test = Derivative.Derivate((x) => Math.Sin(2 * Math.PI * 1 * x), DerivativeMethod.BackwardOnePoint, 0, 1, 100);
        test = Derivative.Derivate((x) => 0.5 * Math.Sin(2 * Math.PI * 2 * x), DerivativeMethod.BackwardOnePoint, 0, 1, 100);
        test = Derivative.Derivate((x) => Math.Sin(2 * Math.PI * 1 * x) + 0.5 * Math.Sin(2 * Math.PI * 2 * x), DerivativeMethod.BackwardOnePoint, 0, 1, 100);
    }

    [TestMethod]
    public void Test_Derivative_ForwardOnePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_CenteredThreePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_CenteredFivePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_CenteredSevenPoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_CenteredNinePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_SGLinearThreePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_SGLinearFivePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_SGLinearSevenPoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_SGLinearNinePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_SGCubicFivePoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_SGCubicSevenPoint()
    {

    }

    [TestMethod]
    public void Test_Derivative_SGCubicNinePoint()
    {

    }
}
